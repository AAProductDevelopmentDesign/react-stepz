{"version":3,"file":"index.js","sources":["../src/models/index.ts","../src/hooks/useStepProgress.ts","../src/contexts/StepProgressContext.tsx","../src/components/StepProgress.tsx","../src/components/StepProgessBar.tsx","../src/components/Step.tsx"],"sourcesContent":["export enum StepStates {\n  NOT_STARTED = 'not_started',\n  CURRENT = 'current',\n  ERROR = 'error',\n  COMPLETED = 'completed'\n}\n\nexport interface ProgressStep {\n  label: string;\n  state?: StepStates;\n  validator?: (payload?: any) => boolean;\n}\n\nexport interface StepProgressContextProps {\n  steps?: ProgressStep[];\n  currentStep?: number;\n}\n\nexport interface UseStepProgressOptions {\n  steps: ProgressStep[];\n  startingStep: number;\n}\n\nexport interface UseStepProgressReturn {\n  stepForward(): void;\n  stepBackwards(): void;\n  currentIndex: number;\n  getProps: StepProgressProps;\n}\n\nexport interface StepProgressProps {\n  steps: ProgressStep[];\n  currentStep: number;\n}\n\nexport interface StepProgressBarProps {\n  className?: string;\n  progressClass?: string;\n  stepClass?: string;\n  contentClass?: string;\n}\n\nexport interface StepProps {\n  step: number;\n}\n\nexport interface ReducerAction {\n  type: string;\n  payload: { index: number; state: StepStates };\n}\n","import * as React from 'react';\n\nimport { UseStepProgressOptions, UseStepProgressReturn, StepStates } from '../models';\n\nfunction stepsReducer(steps: ProgressStep[], action: ReducerAction): ProgressStep[] {\n  return steps.map(function (step, i) {\n    if (i < action.payload.index) {\n      return { ...step, state: StepStates.COMPLETED };\n    } else if (i === action.payload.index) {\n      return { ...step, state: action.payload.state };\n    } else {\n      step.state = StepStates.NOT_STARTED;\n      return step;\n    }\n  });\n}\n\nexport const useStepProgress = (props: UseStepProgressOptions): UseStepProgressReturn => {\n  const { steps, startingStep } = props;\n\n  const [stepState, dispatch] = React.useReducer(stepsReducer, steps);\n  const [currentIndex, setCurrentIndex] = React.useState(startingStep);\n\n  React.useEffect(function () {\n    dispatch({\n      type: 'init',\n      payload: { index: currentIndex, state: StepStates.CURRENT }\n    });\n  }, []);\n\n  function stepForward(): void {\n    if (currentIndex === steps.length - 1) {\n      return;\n    }\n\n    let isStateValid = true;\n    const stepValidator = stepState[currentIndex].validator;\n\n    if (stepValidator) {\n      isStateValid = stepValidator();\n    }\n    dispatch({\n      type: 'next',\n      payload: {\n        index: isStateValid ? currentIndex + 1 : currentIndex,\n        state: isStateValid ? StepStates.CURRENT : StepStates.ERROR\n      }\n    });\n\n    if (isStateValid) {\n      setCurrentIndex(currentIndex + 1);\n    }\n  }\n\n  function stepBackwards(): void {\n    if (currentIndex === 0) {\n      return;\n    }\n\n    dispatch({\n      type: 'previous',\n      payload: {\n        index: currentIndex - 1,\n        state: StepStates.CURRENT\n      }\n    });\n    setCurrentIndex(currentIndex - 1);\n  }\n\n  return {\n    stepForward,\n    stepBackwards,\n    currentIndex,\n    getProps: {\n      steps: stepState,\n      currentStep: currentIndex + 1\n    }\n  };\n};\n","import React, { createContext } from 'react';\nimport { StepProgressContextProps } from '../models';\n\nexport const StepProgressContext: React.Context<StepProgressContextProps> = createContext<\n  StepProgressContextProps\n>({});\n","import React from 'react';\nimport { StepProgressProps } from '../models';\nimport { StepProgressContext } from '../contexts/StepProgressContext';\n\nexport const StepProgress: React.FC<StepProgressProps> = ({\n  children,\n  steps,\n  currentStep\n}): React.ReactElement => (\n  <StepProgressContext.Provider\n    value={{\n      steps,\n      currentStep\n    }}\n  >\n    {children}\n  </StepProgressContext.Provider>\n);\n","import React from 'react';\nimport invariant from 'tiny-invariant';\nimport { StepProgressContext } from '../contexts/StepProgressContext';\nimport styles from './styles.module.css';\n\nimport { StepProgressBarProps, StepStates } from '../models';\n\nexport const StepProgressBar = (props: StepProgressBarProps): JSX.Element => {\n  const { className, progressClass, stepClass } = props;\n\n  return (\n    <StepProgressContext.Consumer>\n      {(context) => {\n        invariant(\n          Object.keys(context).length > 0,\n          'You cannot use a <StepProgressBar> outside a <StepProgess>'\n        );\n\n        const { steps } = context;\n\n        if (steps === undefined) {\n          return;\n        }\n\n        return (\n          <div className={`${styles['progress-bar-wrapper']} ${className || ''}`}>\n            <ul className={`${styles['step-progress-bar']} ${progressClass || ''}`}>\n              {steps.map(function (step, i) {\n                return (\n                  <li\n                    key={i}\n                    className={`${styles['progress-step']}${\n                      step.state === StepStates.COMPLETED ? ` ${styles.completed} completed` : ''\n                    }${step.state === StepStates.CURRENT ? ` ${styles.current} active` : ''}${\n                      step.state === StepStates.ERROR ? ` ${styles['has-error']} error` : ''\n                    } ${stepClass || ''}`}\n                  >\n                    {step.state === StepStates.COMPLETED && (\n                      <span className={styles['step-icon']}>\n                        <svg\n                          width=\"1.5rem\"\n                          viewBox=\"0 0 13 9\"\n                          fill=\"none\"\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                          <path d=\"M1 3.5L4.5 7.5L12 1\" stroke=\"white\" strokeWidth=\"1.5\" />\n                        </svg>\n                      </span>\n                    )}\n                    {step.state === StepStates.ERROR && (\n                      <span className={styles['step-icon']}>!</span>\n                    )}\n                    {step.state !== StepStates.COMPLETED && step.state !== StepStates.ERROR && (\n                      <span className={styles['step-index']}>{i + 1}</span>\n                    )}\n                    <span className={styles['step-label']}>{step.label}</span>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        );\n      }}\n    </StepProgressContext.Consumer>\n  );\n};\n","import React from 'react';\nimport invariant from 'tiny-invariant';\nimport { StepProps } from '../models';\nimport { StepProgressContext } from '../contexts/StepProgressContext';\n\nexport const Step: React.FC<StepProps> = ({ step, children }): React.ReactElement => (\n  <StepProgressContext.Consumer>\n    {(context) => {\n      invariant(Object.keys(context).length > 0, 'You cannot use a <Step> outside a <StepProgess>');\n\n      if (context.currentStep !== step) {\n        return;\n      }\n\n      return children;\n    }}\n  </StepProgressContext.Consumer>\n);\n"],"names":["StepStates","stepsReducer","steps","action","map","step","i","payload","index","state","COMPLETED","NOT_STARTED","useStepProgress","props","startingStep","React","stepState","dispatch","currentIndex","setCurrentIndex","type","CURRENT","stepForward","length","isStateValid","stepValidator","validator","ERROR","stepBackwards","getProps","currentStep","StepProgressContext","createContext","StepProgress","children","Provider","value","StepProgressBar","className","progressClass","stepClass","Consumer","context","invariant","Object","keys","undefined","styles","key","completed","current","width","viewBox","fill","xmlns","d","stroke","strokeWidth","label","Step"],"mappings":"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"}